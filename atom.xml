<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洪九果品测试团队</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hjtest.github.io/"/>
  <updated>2021-05-21T07:36:57.700Z</updated>
  <id>http://hjtest.github.io/</id>
  
  <author>
    <name>洪九果品测试团队</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Fiddler抓包工具总结</title>
    <link href="http://hjtest.github.io/2021/05/07/Fiddler%E6%8A%93%E5%8C%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://hjtest.github.io/2021/05/07/Fiddler%E6%8A%93%E5%8C%85%E9%85%8D%E7%BD%AE/</id>
    <published>2021-05-07T05:08:09.000Z</published>
    <updated>2021-05-21T07:36:57.700Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不积跬步，无以至千里；不积小流，无以成江海。</p></blockquote><p>Fiddler是位于客户端和服务器端之间的代理，也是目前最常用的抓包工具之一 。它能够记录客户端和服务器之间的所有 请求，可以针对特定的请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是web调试的利器。</p><p>官方地址：<a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener">https://www.telerik.com/fiddler</a></p><p><strong>安装环境：Windows 10</strong></p><a id="more"></a><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p>官方下载地址：<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">https://www.telerik.com/download/fiddler</a></p><p>百度云资源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1iBdukW6Silsmo6DWXHuhXQ</span><br><span class="line">提取码：toh2</span><br></pre></td></tr></table></figure><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><p>1)安装<code>FiddlerSetup.exe</code></p><p><img src="/images/image-20210521145645693.png" alt="image-20210521145645693"></p><p><img src="/images/image-20210521145610545.png" alt="image-20210521145610545"></p><p><img src="/images/image-20210521145942133.png" alt="image-20210521145942133"></p><p>2)安装<code>fiddlercertmaker.exe</code></p><h3 id="3-Fiddler配置（配置后重启Fiddler）"><a href="#3-Fiddler配置（配置后重启Fiddler）" class="headerlink" title="3.Fiddler配置（配置后重启Fiddler）"></a>3.Fiddler配置（配置后重启Fiddler）</h3><p><img src="/images/image-20210521150708303.png" alt="image-20210521150708303"></p><img src="/images/image-20210521150750155.png"/><p><img src="/images/image-20210521150821626.png" alt="image-20210521150821626"></p><h3 id="4-抓包设置"><a href="#4-抓包设置" class="headerlink" title="4.抓包设置"></a>4.抓包设置</h3><p>1）获取当前电脑 IP地址</p><p><img src="/images/image-20210521151138062.png" alt="image-20210521151138062"></p><p>2）浏览器访问“当前ip地址:8888”</p><p><img src="/images/image-20210521151737181.png" alt="image-20210521151737181"></p><p>3)IOS进入”设置-通用-描述文件”，点击已下载的描述文件并安装；</p><p><img src="/images/image-20210521151953279.png" alt="image-20210521151953279"></p><p><img src="/images/image-20210521152010541.png" alt="image-20210521152010541"></p><p>4）Android进入”其他设置-设备与隐私”，点击“从存储设备安装证书”，选择已下载的CA证书，即可完成安装</p><p><img src="/images/image-20210521152707709.png" alt="image-20210521152707709"></p><p>5）IOS进入“通用-关于本机-信任证书设置”，信任已安装的CA证书；</p><p><img src="/images/image-20210521152619037.png" alt="image-20210521152619037"></p><p>6）打开WIFI的设置界面，设置代理（IP地址为电脑IP，端口为Fiddler设置的端口（8888））</p><p><img src="/images/image-20210521153117604.png" alt="image-20210521153117604"></p><p><img src="/images/image-20210521153015760.png" alt="image-20210521153015760"></p><h3 id="5-Fiddler使用界面介绍"><a href="#5-Fiddler使用界面介绍" class="headerlink" title="5.Fiddler使用界面介绍"></a>5.Fiddler使用界面介绍</h3><p><img src="/images/image-20210521150508467.png" alt="image-20210521150508467"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不积跬步，无以至千里；不积小流，无以成江海。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fiddler是位于客户端和服务器端之间的代理，也是目前最常用的抓包工具之一 。它能够记录客户端和服务器之间的所有 请求，可以针对特定的请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是web调试的利器。&lt;/p&gt;
&lt;p&gt;官方地址：&lt;a href=&quot;https://www.telerik.com/fiddler&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.telerik.com/fiddler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装环境：Windows 10&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="software" scheme="http://hjtest.github.io/categories/software/"/>
    
    
      <category term="docker" scheme="http://hjtest.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下Docker安装与配置</title>
    <link href="http://hjtest.github.io/2021/05/07/%E3%80%90Centos%E3%80%91Docker%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://hjtest.github.io/2021/05/07/%E3%80%90Centos%E3%80%91Docker%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2021-05-07T05:08:09.000Z</published>
    <updated>2021-05-08T10:29:45.087Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不积跬步，无以至千里；不积小流，无以成江海。</p></blockquote><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><p>官方地址： <a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">https://docs.docker.com/engine/install/centos/</a></p><p><strong>安装环境：CentOS 7</strong></p><p><strong>安装版本：Docker v19.03</strong></p><a id="more"></a><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="卸载已安装的Docker"><a href="#卸载已安装的Docker" class="headerlink" title="卸载已安装的Docker"></a><strong>卸载已安装的Docker</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看已安装的docker</span></span><br><span class="line">yum list installed | grep docker</span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载已安装的docker</span></span><br><span class="line">yum remove docker \</span><br><span class="line">           docker-client \</span><br><span class="line">           docker-client-latest \</span><br><span class="line">           docker-common \</span><br><span class="line">           docker-latest \</span><br><span class="line">           docker-latest-logrotate \</span><br><span class="line">           docker-logrotate \</span><br><span class="line">           docker-engine</span><br><span class="line">           </span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除已安装过的镜像、容器等</span></span><br><span class="line">rm -rf /var/lib/docker/</span><br></pre></td></tr></table></figure><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖包</span><br><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line"></span><br><span class="line"># 设置稳定的仓库</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line">    </span><br><span class="line"># 查看docker版本</span><br><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"># 安装docker-ce（The Docker Engine - Community package）</span><br><span class="line"># 指定版本：sudo yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io</span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"># 启动docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="配置docker镜像加速"><a href="#配置docker镜像加速" class="headerlink" title="配置docker镜像加速"></a>配置docker镜像加速</h4><ul><li>创建daemon配置文件<code>/etc/docker/daemon.json</code>:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;:[&quot;https:&#x2F;&#x2F;tnxkcso1.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重新读取daemon文件：<code>sudo systemctl daemon-reload</code></li><li>重启docker：<code>sudo systemctl restart docker</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不积跬步，无以至千里；不积小流，无以成江海。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。&lt;/p&gt;
&lt;p&gt;官方地址： &lt;a href=&quot;https://docs.docker.com/engine/install/centos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.docker.com/engine/install/centos/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装环境：CentOS 7&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装版本：Docker v19.03&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="software" scheme="http://hjtest.github.io/categories/software/"/>
    
    
      <category term="docker" scheme="http://hjtest.github.io/tags/docker/"/>
    
  </entry>
  
</feed>
